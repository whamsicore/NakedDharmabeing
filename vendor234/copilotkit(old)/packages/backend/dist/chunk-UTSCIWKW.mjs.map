{"version":3,"sources":["../src/lib/copilotkit-backend.ts"],"sourcesContent":["import http from \"http\";\nimport {\n  AnnotatedFunction,\n  annotatedFunctionToChatCompletionFunction,\n  ToolDefinition,\n  EXCLUDE_FROM_FORWARD_PROPS_KEYS,\n} from \"@copilotkit/shared\";\nimport { copilotkitStreamInterceptor, remoteChainToAnnotatedFunction } from \"../utils\";\nimport { RemoteChain, CopilotKitServiceAdapter } from \"../types\";\n\ninterface CopilotBackendConstructorParams {\n  actions?: AnnotatedFunction<any[]>[];\n  langserve?: RemoteChain[];\n  debug?: boolean;\n}\n\nexport class CopilotBackend {\n  private functions: AnnotatedFunction<any[]>[] = [];\n  private langserve: Promise<AnnotatedFunction<any[]>>[] = [];\n  private debug: boolean = false;\n\n  constructor(params?: CopilotBackendConstructorParams) {\n    for (const action of params?.actions || []) {\n      this.functions.push(action);\n    }\n    for (const chain of params?.langserve || []) {\n      this.langserve.push(remoteChainToAnnotatedFunction(chain));\n    }\n    this.debug = params?.debug || false;\n  }\n\n  addFunction(func: AnnotatedFunction<any[]>): void {\n    this.removeFunction(func.name);\n    this.functions.push(func);\n  }\n\n  removeFunction(funcName: string): void {\n    this.functions = this.functions.filter((f) => f.name !== funcName);\n  }\n\n  removeBackendOnlyProps(forwardedProps: any): void {\n    this.removeBackendOnlyProps(forwardedProps);\n    // Get keys backendOnlyPropsKeys in order to remove them from the forwardedProps\n    const backendOnlyPropsKeys = forwardedProps[EXCLUDE_FROM_FORWARD_PROPS_KEYS];\n    if (Array.isArray(backendOnlyPropsKeys)) {\n      backendOnlyPropsKeys.forEach((key) => {\n        const success = Reflect.deleteProperty(forwardedProps, key);\n        if (!success) {\n          console.error(`Failed to delete property ${key}`);\n        }\n      });\n      // After deleting individual backend-only properties, delete the EXCLUDE_FROM_FORWARD_PROPS_KEYS property itself from forwardedProps\n      const success = Reflect.deleteProperty(forwardedProps, EXCLUDE_FROM_FORWARD_PROPS_KEYS);\n      if (!success) {\n        console.error(`Failed to delete EXCLUDE_FROM_FORWARD_PROPS_KEYS`);\n      }\n    } else if (backendOnlyPropsKeys) {\n      console.error(\"backendOnlyPropsKeys is not an array\");\n    }\n  }\n  async stream(\n    forwardedProps: any,\n    serviceAdapter: CopilotKitServiceAdapter,\n  ): Promise<ReadableStream> {\n    const langserveFunctions: AnnotatedFunction<any[]>[] = [];\n\n    for (const chainPromise of this.langserve) {\n      try {\n        const chain = await chainPromise;\n        langserveFunctions.push(chain);\n      } catch (error) {\n        console.error(\"Error loading langserve chain:\", error);\n      }\n    }\n\n    // merge server side functions with langserve functions\n    let mergedTools = mergeServerSideTools(\n      this.functions.map(annotatedFunctionToChatCompletionFunction),\n      langserveFunctions.map(annotatedFunctionToChatCompletionFunction),\n    );\n\n    // merge with client side functions\n    mergedTools = mergeServerSideTools(mergedTools, forwardedProps.tools);\n\n    const openaiCompatibleStream = await serviceAdapter.stream({\n      ...forwardedProps,\n      tools: mergedTools,\n    });\n    return copilotkitStreamInterceptor(\n      openaiCompatibleStream,\n      [...this.functions, ...langserveFunctions],\n      this.debug,\n    );\n  }\n\n  async response(req: Request, serviceAdapter: CopilotKitServiceAdapter): Promise<Response> {\n    try {\n      return new Response(await this.stream(await req.json(), serviceAdapter));\n    } catch (error: any) {\n      return new Response(\"\", { status: 500, statusText: error.message });\n    }\n  }\n\n  async streamHttpServerResponse(\n    req: http.IncomingMessage,\n    res: http.ServerResponse,\n    serviceAdapter: CopilotKitServiceAdapter,\n  ) {\n    const bodyParser = new Promise<any>((resolve, reject) => {\n      let body = \"\";\n      req.on(\"data\", (chunk) => (body += chunk.toString()));\n      req.on(\"end\", () => {\n        try {\n          resolve(JSON.parse(body));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    });\n    const forwardedProps = await bodyParser;\n    const stream = await this.stream(forwardedProps, serviceAdapter);\n    const reader = stream.getReader();\n\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        res.end();\n        break;\n      } else {\n        res.write(new TextDecoder().decode(value));\n      }\n    }\n  }\n}\n\nexport function mergeServerSideTools(\n  serverTools: ToolDefinition[],\n  clientTools?: ToolDefinition[],\n) {\n  let allTools: ToolDefinition[] = serverTools.slice();\n  const serverToolsNames = serverTools.map((tool) => tool.function.name);\n  if (clientTools) {\n    allTools = allTools.concat(\n      // filter out any client functions that are already defined on the server\n      clientTools.filter((tool: ToolDefinition) => !serverToolsNames.includes(tool.function.name)),\n    );\n  }\n  return allTools;\n}\n"],"mappings":"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","names":["success"]}