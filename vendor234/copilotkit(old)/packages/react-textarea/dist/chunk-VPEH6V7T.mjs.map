{"version":3,"sources":["../src/hooks/base-copilot-textarea-implementation/use-populate-copilot-textarea-ref.ts"],"sourcesContent":["import React from \"react\";\nimport { Editor } from \"slate\";\nimport { ReactEditor } from \"slate-react\";\nimport { getFullEditorTextWithNewlines } from \"../../lib/get-text-around-cursor\";\nimport { replaceEditorText } from \"../../lib/slatejs-edits/replace-text\";\nimport { HTMLCopilotTextAreaElement } from \"../../types\";\nimport { CustomEditor } from \"../../types/base/custom-editor\";\n\nexport function usePopulateCopilotTextareaRef(\n  editor: Editor,\n  ref: React.Ref<HTMLCopilotTextAreaElement>,\n) {\n  React.useImperativeHandle(\n    ref,\n    () => {\n      class Combined {\n        constructor(private customMethods: CustomMethods, private editorHtmlElement: HTMLElement) {}\n\n        [key: string]: any;\n\n        get(target: any, propKey: string): any {\n          if (this.isKeyOfCustomMethods(propKey)) {\n            const value = this.customMethods[propKey];\n            if (typeof value === \"function\") {\n              return value.bind(this.customMethods);\n            }\n            return value;\n          } else if (this.isKeyOfHTMLElement(propKey)) {\n            const value = this.editorHtmlElement[propKey];\n            if (typeof value === \"function\") {\n              return value.bind(this.editorHtmlElement);\n            }\n            return value;\n          }\n        }\n\n        set(target: any, propKey: string, value: any): boolean {\n          if (this.isKeyOfCustomMethods(propKey)) {\n            (this.customMethods as any)[propKey] = value;\n          } else if (this.isKeyOfHTMLElement(propKey)) {\n            (this.editorHtmlElement as any)[propKey] = value;\n          } else {\n            // Default behavior (optional)\n            target[propKey] = value;\n          }\n          return true;\n        }\n\n        private isKeyOfCustomMethods(key: string): key is keyof CustomMethods {\n          return key in this.customMethods;\n        }\n\n        private isKeyOfHTMLElement(key: string): key is keyof HTMLElement {\n          return key in this.editorHtmlElement;\n        }\n      }\n\n      const handler = {\n        get(target: any, propKey: keyof CustomMethods | keyof HTMLElement) {\n          return target.get(target, propKey);\n        },\n        set(target: any, propKey: keyof CustomMethods | keyof HTMLElement, value: any) {\n          return target.set(target, propKey, value);\n        },\n      };\n\n      class CustomMethods {\n        constructor(private editor: CustomEditor) {}\n\n        focus() {\n          ReactEditor.focus(this.editor);\n        }\n\n        blur() {\n          ReactEditor.blur(this.editor);\n        }\n\n        get value() {\n          return getFullEditorTextWithNewlines(this.editor);\n        }\n        set value(value: string) {\n          replaceEditorText(this.editor, value);\n        }\n      }\n\n      const editorHtmlElement = ReactEditor.toDOMNode(editor, editor);\n      const customMethods = new CustomMethods(editor);\n\n      const combined = new Combined(customMethods, editorHtmlElement);\n      return new Proxy(combined, handler);\n    },\n    [editor],\n  );\n}\n"],"mappings":";;;;;;;;AAAA,OAAO,WAAW;AAElB,SAAS,mBAAmB;AAMrB,SAAS,8BACd,QACA,KACA;AACA,QAAM;AAAA,IACJ;AAAA,IACA,MAAM;AACJ,YAAM,SAAS;AAAA,QACb,YAAoBA,gBAAsCC,oBAAgC;AAAtE,+BAAAD;AAAsC,mCAAAC;AAAA,QAAiC;AAAA,QAI3F,IAAI,QAAa,SAAsB;AACrC,cAAI,KAAK,qBAAqB,OAAO,GAAG;AACtC,kBAAM,QAAQ,KAAK,cAAc,OAAO;AACxC,gBAAI,OAAO,UAAU,YAAY;AAC/B,qBAAO,MAAM,KAAK,KAAK,aAAa;AAAA,YACtC;AACA,mBAAO;AAAA,UACT,WAAW,KAAK,mBAAmB,OAAO,GAAG;AAC3C,kBAAM,QAAQ,KAAK,kBAAkB,OAAO;AAC5C,gBAAI,OAAO,UAAU,YAAY;AAC/B,qBAAO,MAAM,KAAK,KAAK,iBAAiB;AAAA,YAC1C;AACA,mBAAO;AAAA,UACT;AAAA,QACF;AAAA,QAEA,IAAI,QAAa,SAAiB,OAAqB;AACrD,cAAI,KAAK,qBAAqB,OAAO,GAAG;AACtC,YAAC,KAAK,cAAsB,OAAO,IAAI;AAAA,UACzC,WAAW,KAAK,mBAAmB,OAAO,GAAG;AAC3C,YAAC,KAAK,kBAA0B,OAAO,IAAI;AAAA,UAC7C,OAAO;AAEL,mBAAO,OAAO,IAAI;AAAA,UACpB;AACA,iBAAO;AAAA,QACT;AAAA,QAEQ,qBAAqB,KAAyC;AACpE,iBAAO,OAAO,KAAK;AAAA,QACrB;AAAA,QAEQ,mBAAmB,KAAuC;AAChE,iBAAO,OAAO,KAAK;AAAA,QACrB;AAAA,MACF;AAEA,YAAM,UAAU;AAAA,QACd,IAAI,QAAa,SAAkD;AACjE,iBAAO,OAAO,IAAI,QAAQ,OAAO;AAAA,QACnC;AAAA,QACA,IAAI,QAAa,SAAkD,OAAY;AAC7E,iBAAO,OAAO,IAAI,QAAQ,SAAS,KAAK;AAAA,QAC1C;AAAA,MACF;AAEA,YAAM,cAAc;AAAA,QAClB,YAAoBC,SAAsB;AAAtB,wBAAAA;AAAA,QAAuB;AAAA,QAE3C,QAAQ;AACN,sBAAY,MAAM,KAAK,MAAM;AAAA,QAC/B;AAAA,QAEA,OAAO;AACL,sBAAY,KAAK,KAAK,MAAM;AAAA,QAC9B;AAAA,QAEA,IAAI,QAAQ;AACV,iBAAO,8BAA8B,KAAK,MAAM;AAAA,QAClD;AAAA,QACA,IAAI,MAAM,OAAe;AACvB,4BAAkB,KAAK,QAAQ,KAAK;AAAA,QACtC;AAAA,MACF;AAEA,YAAM,oBAAoB,YAAY,UAAU,QAAQ,MAAM;AAC9D,YAAM,gBAAgB,IAAI,cAAc,MAAM;AAE9C,YAAM,WAAW,IAAI,SAAS,eAAe,iBAAiB;AAC9D,aAAO,IAAI,MAAM,UAAU,OAAO;AAAA,IACpC;AAAA,IACA,CAAC,MAAM;AAAA,EACT;AACF;","names":["customMethods","editorHtmlElement","editor"]}