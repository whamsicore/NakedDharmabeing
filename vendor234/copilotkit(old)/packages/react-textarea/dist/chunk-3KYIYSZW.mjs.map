{"version":3,"sources":["../src/components/copilot-textarea/copilot-textarea.tsx"],"sourcesContent":["// This example is for an Editor with `ReactEditor` and `HistoryEditor`\nimport React from \"react\";\nimport { useMakeStandardAutosuggestionFunction } from \"../../hooks/make-autosuggestions-function/use-make-standard-autosuggestions-function\";\nimport { HTMLCopilotTextAreaElement } from \"../../types\";\nimport { BaseCopilotTextareaProps } from \"../../types/base/base-copilot-textarea-props\";\nimport {\n  AutosuggestionsConfig,\n  defaultAutosuggestionsConfig,\n} from \"../../types/autosuggestions-config\";\nimport { BaseCopilotTextarea } from \"../base-copilot-textarea/base-copilot-textarea\";\nimport { useMakeStandardInsertionOrEditingFunction } from \"../../hooks/make-autosuggestions-function/use-make-standard-insertion-function\";\nimport merge from \"lodash.merge\";\nimport { AutosuggestionsConfigUserSpecified } from \"../../types/autosuggestions-config/autosuggestions-config-user-specified\";\n\n// Like the base copilot textarea props,\n// but with baseAutosuggestionsConfig replaced with autosuggestionsConfig.\nexport interface CopilotTextareaProps\n  extends Omit<BaseCopilotTextareaProps, \"baseAutosuggestionsConfig\"> {\n  autosuggestionsConfig: AutosuggestionsConfigUserSpecified;\n}\n\n/**\n * A copilot textarea that uses the standard autosuggestions function.\n */\nexport const CopilotTextarea = React.forwardRef(\n  (props: CopilotTextareaProps, ref: React.Ref<HTMLCopilotTextAreaElement>) => {\n    // separate the AutosuggestionsConfigUserSpecified from the rest of the props\n    const { autosuggestionsConfig: autosuggestionsConfigUserSpecified, ...forwardedProps } = props;\n\n    const autosuggestionsConfig: AutosuggestionsConfig = merge(\n      defaultAutosuggestionsConfig,\n      autosuggestionsConfigUserSpecified,\n    );\n\n    const autosuggestionsFunction = useMakeStandardAutosuggestionFunction(\n      autosuggestionsConfig.textareaPurpose,\n      autosuggestionsConfig.contextCategories,\n      autosuggestionsConfig.chatApiConfigs.suggestionsApiConfig,\n    );\n\n    const insertionOrEditingFunction = useMakeStandardInsertionOrEditingFunction(\n      autosuggestionsConfig.textareaPurpose,\n      autosuggestionsConfig.contextCategories,\n      autosuggestionsConfig.chatApiConfigs.insertionApiConfig,\n      autosuggestionsConfig.chatApiConfigs.editingApiConfig,\n    );\n\n    return (\n      <>\n        <BaseCopilotTextarea\n          ref={ref}\n          {...forwardedProps}\n          baseAutosuggestionsConfig={{\n            ...autosuggestionsConfig,\n            apiConfig: {\n              insertionOrEditingFunction: insertionOrEditingFunction,\n              autosuggestionsFunction: autosuggestionsFunction,\n            },\n          }}\n        />\n      </>\n    );\n  },\n);\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAO,WAAW;AAUlB,OAAO,WAAW;AAqCZ,mBACE,WADF;AAxBC,IAAM,kBAAkB,MAAM;AAAA,EACnC,CAAC,OAA6B,QAA+C;AAE3E,UAAyF,YAAjF,yBAAuB,mCA3BnC,IA2B6F,IAAnB,2BAAmB,IAAnB,CAA9D;AAER,UAAM,wBAA+C;AAAA,MACnD;AAAA,MACA;AAAA,IACF;AAEA,UAAM,0BAA0B;AAAA,MAC9B,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB,eAAe;AAAA,IACvC;AAEA,UAAM,6BAA6B;AAAA,MACjC,sBAAsB;AAAA,MACtB,sBAAsB;AAAA,MACtB,sBAAsB,eAAe;AAAA,MACrC,sBAAsB,eAAe;AAAA,IACvC;AAEA,WACE,gCACE;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,SACI,iBAFL;AAAA,QAGC,2BAA2B,iCACtB,wBADsB;AAAA,UAEzB,WAAW;AAAA,YACT;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA;AAAA,IACF,GACF;AAAA,EAEJ;AACF;","names":[]}