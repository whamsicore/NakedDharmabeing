{"version":3,"sources":["../../src/utils/annotated-function.ts"],"sourcesContent":["import { AnnotatedFunction, FunctionDefinition, ToolDefinition } from \"../types\";\n\nexport function annotatedFunctionToChatCompletionFunction(\n  annotatedFunction: AnnotatedFunction<any[]>,\n): ToolDefinition {\n  // Create the parameters object based on the argumentAnnotations\n  let parameters: { [key: string]: any } = {};\n  for (let arg of annotatedFunction.argumentAnnotations) {\n    // isolate the args we should forward inline\n    let { name, required, ...forwardedArgs } = arg;\n    parameters[arg.name] = forwardedArgs;\n  }\n\n  let requiredParameterNames: string[] = [];\n  for (let arg of annotatedFunction.argumentAnnotations) {\n    if (arg.required) {\n      requiredParameterNames.push(arg.name);\n    }\n  }\n\n  // Create the ChatCompletionFunctions object\n  let chatCompletionFunction: ToolDefinition = {\n    type: \"function\",\n    function: {\n      name: annotatedFunction.name,\n      description: annotatedFunction.description,\n      parameters: {\n        type: \"object\",\n        properties: parameters,\n        required: requiredParameterNames,\n      },\n    },\n  };\n\n  return chatCompletionFunction;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,SAAS,0CACd,mBACgB;AAEhB,MAAI,aAAqC,CAAC;AAC1C,WAAS,OAAO,kBAAkB,qBAAqB;AAErD,QAAI,EAAE,MAAM,UAAU,GAAG,cAAc,IAAI;AAC3C,eAAW,IAAI,IAAI,IAAI;AAAA,EACzB;AAEA,MAAI,yBAAmC,CAAC;AACxC,WAAS,OAAO,kBAAkB,qBAAqB;AACrD,QAAI,IAAI,UAAU;AAChB,6BAAuB,KAAK,IAAI,IAAI;AAAA,IACtC;AAAA,EACF;AAGA,MAAI,yBAAyC;AAAA,IAC3C,MAAM;AAAA,IACN,UAAU;AAAA,MACR,MAAM,kBAAkB;AAAA,MACxB,aAAa,kBAAkB;AAAA,MAC/B,YAAY;AAAA,QACV,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;","names":[]}