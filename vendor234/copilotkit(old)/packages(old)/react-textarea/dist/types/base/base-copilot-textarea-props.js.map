{"version":3,"sources":["../../../src/types/base/base-copilot-textarea-props.tsx"],"sourcesContent":["import { TextareaHTMLAttributes } from \"react\";\nimport { BaseAutosuggestionsConfig } from \".\";\nimport { BaseCopilotTextareaApiConfig } from \"./autosuggestions-bare-function\";\n\n/**\n * `BaseCopilotTextareaProps` defines the properties for the `BaseCopilotTextarea` component.\n *\n * @extends {Omit<TextareaHTMLAttributes<HTMLDivElement>, \"onChange\">}\n *\n * @property {boolean} [disableBranding=false] - Determines whether branding should be disabled. Default is `false`.\n *\n * @property {React.CSSProperties} [placeholderStyle] - Specifies the CSS styles to apply to the placeholder text.\n *\n * @property {React.CSSProperties} [suggestionsStyle] - Specifies the CSS styles to apply to the suggestions list.\n *\n * @property {string} [hoverMenuClassname] - a classname to applly to the editor popover window.\n *\n * @property {string} [value] - The initial value of the textarea. Can be controlled via `onValueChange`.\n *\n * @property {(value: string) => void} [onValueChange] - Callback invoked when the value of the textarea changes.\n *\n * @property {(event: React.ChangeEvent<HTMLTextAreaElement>) => void} [onChange] - Callback invoked when a `change` event is triggered on the textarea element. The event only actually includes the `event.target.value` and `event.currentTarget.value` properties (all that is required in 99% of cases).\n *\n * @property {Partial<BaseAutosuggestionsConfig> & {\n *   textareaPurpose: string;\n * }} autosuggestionsConfig - Configuration settings for the autosuggestions feature.\n * Includes a mandatory `textareaPurpose` to guide the autosuggestions.\n */\nexport interface BaseCopilotTextareaProps\n  extends Omit<TextareaHTMLAttributes<HTMLDivElement>, \"onChange\"> {\n  disableBranding?: boolean;\n  placeholderStyle?: React.CSSProperties;\n  suggestionsStyle?: React.CSSProperties;\n  hoverMenuClassname?: string;\n  value?: string;\n  onValueChange?: (value: string) => void;\n  onChange?: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  shortcut?: string;\n  baseAutosuggestionsConfig: Partial<BaseAutosuggestionsConfig> & {\n    textareaPurpose: string;\n    apiConfig: BaseCopilotTextareaApiConfig;\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}